[project]
name = "{{ cookiecutter.nonebot.project_name }}"
version = "0.1.0"
description = "{{ cookiecutter.computed.project_desc }}"
readme = "README.md"
requires-python = ">=3.9, <4.0"
{% set dependencies = [] -%}
{% for driver in cookiecutter.nonebot.drivers.values() -%}
{% if driver.project_link == "" -%}
{% set driver_str = '"nonebot2>=%s"'|format(driver.version) -%}
{%- else -%}
{% set driver_str = '"%s>=%s"'|format(driver.project_link, driver.version) -%}
{%- endif -%}
{% if driver.project_link != "" or cookiecutter.nonebot.drivers|length == 1 -%}
{% set _ = dependencies.append(driver_str) -%}
{%- endif -%}
{%- endfor -%}
{% for adapter in cookiecutter.nonebot.adapters.values() -%}
{% set adapter_str = '"%s>=%s"'|format(adapter[0].project_link, adapter[0].version) -%}
{% set _ = dependencies.append(adapter_str) -%}
{%- endfor -%}
dependencies = [
    {{ dependencies|join(",\n")|indent(4) }}
]

[project.optional-dependencies]
dev = [
{%- set devtools_pkg = [] -%}
{% if "pyright" in cookiecutter.nonebot.devtools -%}
{% set _ = devtools_pkg.append('"pyright[nodejs]"') %}
{%- endif -%}
{% if "mypy" in cookiecutter.nonebot.devtools -%}
{% set _ = devtools_pkg.append('"mypy"') %}
{%- endif -%}
{% if "basedpyright" in cookiecutter.nonebot.devtools -%}
{% set _ = devtools_pkg.append('"basedpyright"') %}
{%- endif -%}
{% if "ruff" in cookiecutter.nonebot.devtools -%}
{% set _ = devtools_pkg.append('"ruff"') %}
{%- endif %}
    {{ devtools_pkg|join(",\n")|indent(4) }}
]

[tool.nonebot]
plugin_dirs = ["{{ cookiecutter.custom.source_dir }}/plugins"]
builtin_plugins = []

[tool.nonebot.adapters]
{% for package, adapters in cookiecutter.nonebot.adapters.items() -%}
{% set adapters_ = [] -%}
{% for adapter in adapters -%}
{% set name = adapter.name -%}
{% set module_name = adapter.module_name -%}
{% set adapter_str = '{ name = "%s", module_name = "%s" }'|format(name, module_name) -%}
{% set _ = adapters_.append(adapter_str) -%}
{%- endfor -%}
{{ package }} = [
    {{ adapters_|join(",\n")|indent(4) }}
]
{% endfor -%}
"@local" = []

[tool.nonebot.plugins]
"@local" = []
{% if "ruff" in cookiecutter.nonebot.devtools -%}

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
# For more rules, see https://docs.astral.sh/ruff/rules/.
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "I",     # isort
    "C90",   # mccabe
    "N",     # pep8-naming
    "PL",    # pylint
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "ICN",   # flake8-import-conventions
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SIM",   # flake8-simplify
    "SLOT",  # flake8-slots
    "TID",   # flake8-tidy-imports
    "TC",    # flake8-type-checking
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    # "ERA",   # eradicate
    "FAST",  # FastAPI
    "PERF",  # Perflint
    "PGH",   # pygrep-hooks
    "FURB",  # refurb
    "TRY",   # tryceratops
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E402",    # module-import-not-at-top-of-file  # nonebot2 require() violates this
    "B008",    # function-call-in-default-argument  # nonebot2 Depends() without Annotated violates this
    "UP037",   # quoted-annotation
    # "RUF001",  # ambiguous-unicode-character-string
    # "RUF002",  # ambiguous-unicode-character-docstring
    # "RUF003",  # ambiguous-unicode-character-comment
    # "ANN201",  # missing-return-type-undocumented-public-function
    "ANN202",  # missing-return-type-private-function
    "ANN401",  # any-type
    "COM812",  # missing-trailing-comma
    "PLC0415", # import-outside-top-level
]
allowed-confusables = ["，", "。", "“", "”", "：", "；", "？", "！", "【", "】", "《", "》", "…", "—", "（", "）", "、"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true
{% endif -%}
{% if "pyright" in cookiecutter.nonebot.devtools or "basedpyright" in cookiecutter.nonebot.devtools %}
{% if "pyright" in cookiecutter.nonebot.devtools -%}
[tool.pyright]
# For Pylance/Pyright configurations, see https://microsoft.github.io/pyright/#/configuration.
{%- else -%}
[tool.basedpyright]
# For BasedPyright configurations, see https://docs.basedpyright.com/latest/configuration/config-files/.
{%- endif %}
pythonVersion = "3.9"
pythonPlatform = "All"
typeCheckingMode = "standard"
{%- endif %}
{% if "mypy" in cookiecutter.nonebot.devtools %}
[tool.mypy]
# For MyPy configurations, see https://mypy.readthedocs.io/en/latest/config_file.html.
python_version = "3.9"
{% endif -%}
